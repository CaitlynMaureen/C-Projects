Lilah has a string, , of lowercase English letters that she repeated infinitely many times.

Given an integer, , find and print the number of letter a's in the first  letters of Lilah's infinite string.

For example, if the string  and , the substring we consider is , the first  characters of her infinite string. There are  occurrences of a in the substring.

Function Description

Complete the repeatedString function in the editor below. It should return an integer representing the number of occurrences of a in the prefix of length  in the infinitely repeating string.

repeatedString has the following parameter(s):

s: a string to repeat
n: the number of characters to consider
Input Format

The first line contains a single string, . 
The second line contains an integer, .

For  of the test cases, .
Output Format

Print a single integer denoting the number of letter a's in the first  letters of the infinite string created by repeating  infinitely many times.

/////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <bits/stdc++.h>
#include <iostream>
using namespace std;

long repeatedString(string s, long n) {
    
    char a = 'a';
    int count = 0;

    for(int i = 0; i < s.size(); i++) {
        if(s[i] == a) {
            count++;
        }
    }

    long repeat = n / s.size();
    long total = count * repeat;

    int countRemainders = 0;

    for (int i = 0; i < n % s.size(); i++) {
        if (s[i] == a) {
            countRemainders++;
        }
    }

    total = total + countRemainders;
    
    long result = total;
    return result;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string s;
    getline(cin, s);

    long n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    long result = repeatedString(s, n);

    fout << result << "\n";

    fout.close();

    return 0;
}
